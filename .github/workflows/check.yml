name: build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - uses: mamba-org/setup-micromamba@v1
      with:
        micromamba-version: '1.5.6-0'
        environment-name: test
        environment-file: mamba/dev.yml
        cache-environment: true
        post-cleanup: 'all'
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Install toolkit
      shell: micromamba-shell {0}
      run: |
        cd src/python
        poetry install
    - name: Run style checks and unit tests
      shell: micromamba-shell {0}
      run: |
        bash scripts/check.sh

  workflow:
    runs-on: ubuntu-latest
    env:
      GENOMES: "GCF_000001405.40_GRCh38.p14;GCF_000001635.27_GRCm39"
      CHROMOSOMES: "chr1;chr1"
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    # TODO: cache Docker images
    - name: Build Docker images
      # NB: defaults to building images for "dev" profile.
      run: |
        bash scripts/docker.sh
    - uses: mamba-org/setup-micromamba@v1
      with:
        micromamba-version: '1.5.6-0'
        environment-name: test
        environment-file: mamba/dev.yml
        cache-environment: true
        post-cleanup: 'all'
    - name: Restore cached references
      id: cache-references
      uses: actions/cache@v4
      with:
        path: ./data/
        # Change the cache key when the contents of the reference folder changes.
        key: ${{ env.GENOMES }}
    - name: Build reference
      if: steps.cache-references.outputs.cache-hit != 'true'
      timeout-minutes: 60
      shell: micromamba-shell {0}
      run: |
        IFS=';' read -ra genomes <<< "$GENOMES"
        IFS=';' read -ra chromos <<< "$CHROMOSOMES"
        for (( i=0; i<${#genomes[*]}; ++i )); do
          bash scripts/build_reference.sh -D ./data -g ${genomes[$i]} -c ${chromos[$i]} -x
        done
    - name: Run workflow
      shell: micromamba-shell {0}
      env:
        # Test with "dev" profile images
        PROFILES: local,linux,dev
      run: |
        export REF_DIR="$(pwd)"
        cd src/nextflow/cryptic-seq
        pytest --git-aware --kwd tests/integration/ || cat /tmp/pytest_workflow*/*/.nextflow.log
